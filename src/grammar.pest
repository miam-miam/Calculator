basic_int = @{("+" | "-")? ~ ASCII_DIGIT+}
basic_dec = @{ "0"* ~ '1'..'9' ~ '0'..'9'* } // Ensures that 2.0000000 is not a dec
// Using compound since it allows us to then directly extract the different components of each int/dec.
int = ${ basic_int ~ "."? ~ "0"* ~ (^"e" ~ basic_int)? } // . and 0 is used so that 2.000000 is considered an int
dec = ${ basic_int? ~ ("." ~ basic_dec) ~ (^"e" ~ basic_int)? }
pi = ${ (dec | int) ~ ^"pi" }
single_pi = ${ ^"pi" }

operation = _{ add | subtract | divide | power | multiply }
    add      = { "+" }
    subtract = { "-" }
    divide   = { "/" }
    power    = { "^" | "**" }
    multiply = { "*" | "" }

func = {single_arg}
    single_arg = _{(sqrt | cbrt | square | cube) ~ "(" ~ expr ~ ")"?}
        sqrt = {"sqrt"}
        cbrt = {"cbrt"}
        square = {"square"}
        cube = {"cube"}

expr = { term ~ (operation ~ term)* }
term = _{ single_pi | pi | dec | int | func | "(" ~ expr ~ ")"? }

calculation = _{ SOI ~ expr ~ EOI }

WHITESPACE = _{ " " | "\t" }